Attendence<-scan()
Salary<-scan()
Years<-scan()
data<-data.frame(Attendence,Salary,Years)
data
fix(data)
data$Attendence
boxplot(Attendence,main="Boxplot for Attendence",ylab="Attendence")
boxplot(Attendence,main="Boxplot for Attendence",ylab="Attendence")
boxplot(Salary,main="Boxplot for Salary",ylab="Salary")
data$Attendence #display value of Attendence
boxplot(Attendence,main="Boxplot for Attendence",ylab="Attendence")
data<-data.frame(Attendence,Salary,Years) #creae data frame
boxplot(Attendence,main="Boxplot for Attendence",ylab="Attendence")
boxplot(Attendence,main="Boxplot for Attendence",ylab="Attendence",horizontal = TRUE)
boxplot(Attendence,main="Boxplot for Attendence",ylab="Attendence",horizontal = TRUE)
boxplot(Salary,main="Boxplot for Salary",ylab="Salary",horizontal = TRUE)
boxplot(Years,main="Boxplot for Years",ylab="Years",horizontal = TRUE)
hist(Attendence,main="Histogram for Attendence",ylab = "Frequency")
hist(Attendence,main="Histogram for Attendence",ylab = "Frequency")
hist(Attendence,main="Histogram for Attendence",ylab = "Frequency")
hist(Attendence,main="Histogram for Attendence",ylab = "Frequency")
hist(Salary,main="Histogram for Salary",ylab="Frequency",horizontal = TRUE)
hist(Years,main="Histogram for Years",ylab="Frequency",horizontal = TRUE)
hist(Years,main="Histogram for Years",ylab="Frequency")
hist(Salary,main="Histogram for Salary",ylab="Frequency")
stem(Attendence)
stem(Attendence)
stem(Attendence)
stem(Salary)
stem(Years)
summary(data) #data = dataframe name
sapply(data,sd)
sapply(data,sd)
sd(Attendence)
mean(Attendence)
mean(Salary)
mean(Years)
quantile(Years)
sapply(data,sd) #get standed deviation for all column in dataframe
sapply(data,sd) #get standed deviation for all column in dataframe
IQR(Years) # inter quantile (IQR = Q3-Q1)
sapply(data,IQR)
table(Years)
get.mode<-function(x){
counts<-table(x) #x = frequncy table
names(counts[counts=max(counts)])
get.mode(Years)
get.mode<-function(x){
counts<-table(x) #x = frequncy table
names(counts[counts=max(counts)])
}
get.mode(Years)
get.mode<-function(x){
counts<-table(x) #x = frequncy table
names(counts[counts=max(counts)])
}
get.mode(Years)
get.mode<-function(x){
counts<-table(x) #x = frequncy table
names(counts[counts=max(counts)])
}
get.mode(Years)
table(Years) #Frequency table (output first line display values, secound line display frequency)
>
get.mode<-function(x){
counts<-table(x) #x = frequncy table
names(counts[counts=max(counts)])
}
get.mode(Years)
table(Years) #Frequency table (output first line display values, secound line display frequency)
get.mode<-function(x){
counts<-table(x) #x = frequncy table
names(counts[counts=max(counts)])
}
get.mode(Years)
table(Years) #Frequency table (output first line display values, secound line display frequency)
table(Years) #Frequency table (output first line display values, secound line display frequency)
get.mode<-function(x){
counts<-table(x) #x = frequncy table
names(counts[counts==max(counts)])
}
get.mode(Years)
table(Years) #Frequency table (output first line display values, secound line display frequency)
get.mode<-function(x){
counts<-table(x) #x = frequncy table
names(counts[counts == max(counts)])
}
get.mode(Years)
find.outliers<-function(x){
q1<-quantile(x)[2]
q3<-quantile(x)[4]
iqr<-q3-q1
ub<-q3+1.5*iqr
lb<-q1-1.5*iqr
print(paste("upper Bound= ",up))
print(paste("Lower Bound= ",lp))
print(paste("outliers: ",paste(sort(x[x<lb | x>ub]),collapse = ",")))
}
find.outliers(Years)
find.outliers<-function(x){
q1<-quantile(x)[2]
q3<-quantile(x)[4]
iqr<-q3-q1
ub<-q3+1.5*iqr
lb<-q1-1.5*iqr
print(paste("upper Bound= ",up))
print(paste("Lower Bound= ",lp))
print(paste("outliers: ",paste(sort(x[x<lb | x>ub]),collapse = ",")))
}
find.outliers(Years)
find.outliers<-function(x){
q1<-quantile(x)[2]
q3<-quantile(x)[4]
iqr<-q3-q1
up<-q3+1.5*iqr
lb<-q1-1.5*iqr
print(paste("upper Bound= ",up))
print(paste("Lower Bound= ",lp))
print(paste("outliers: ",paste(sort(x[x<lb | x>ub]),collapse = ",")))
}
find.outliers(Years)
#function
find.outliers<-function(x){
q1<-quantile(x)[2]
q3<-quantile(x)[4]
iqr<-q3-q1
ub<-q3+1.5*iqr
lb<-q1-1.5*iqr
print(paste("upper Bound= ",ub))
print(paste("Lower Bound= ",lb))
print(paste("outliers: ",paste(sort(x[x<lb | x>ub]),collapse = ",")))
}
find.outliers(Years)
find.outliers<-function(x){
q1<-quantile(x)[2]
q3<-quantile(x)[4]
iqr<-q3-q1
ub<-q3+1.5*iqr
lb<-q1-1.5*iqr
print(paste("upper Bound= ",ub))
print(paste("Lower Bound= ",lb))
write.csv(sheep,file = "sheepNew.csv")
write.table(sheep,file = "sheeptable.txt")
print(paste("outliers: ",paste(sort(x[x<lb | x>ub]),collapse = ",")))
}
find.outliers(Years)
getwd()
setwd(C:\\Users\\IT18121766\\Desktop\\Ps LAB 6)
setwd(C:\Users\\IT18121766\\Desktop\\Ps LAB 6)
setwd("C:\\Users\\IT18121766\\Desktop\\Ps LAB 6")
getwd()
nicotine<-read.table("Data - Lab 6.txt",header = TRUE) #import txt file(dataset) ,nicotine= variyable name(can any name)
nicotine
fix(nicotine)
fix(nicotine) #display Data Editor
nicotine<-nicotine[[1]] #assign 1st column in nicotine veriable
mean(nicotine)
var(nicotine)
s<-sample(nicotine,5)
s
s
s
s
s
s<-sample(nicotine,5)
s
samples<-c() #samples is veriable name
n<-c()
for(i in 1:30){
s<-sample(nicotine,5)
samples<-cbind(samples,s)
n<-c(n,paste('s',i))
}
colnames(samples)<-n
samples
s.means<-colMeans(samples)
s.vars<-apply(samples,2,var)
s.means
s.vars
s.vars<-apply(samples,1,var)
s.vars
mean(s.means)
var(s.means)
mean(s.means)
var(s.vars)
mean(nicotine) #population mean
mean(s.means) #mean of the sample mean
var(nicotine) #population variance
var(s.vars) # variance of sample
